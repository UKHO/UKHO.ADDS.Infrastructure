name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd).$(BuildCounter)

trigger:
- main

pool: NautilusBuild

variables:
- name: BuildConfiguration
  value: "Release"
- name: BuildPlatform
  value: "any cpu"
- name: BuildCounter
  value: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
- name: UKHOAssemblyCompany
  value: "UK Hydrographic Office"
- name: UKHOAssemblyVersionPrefix
  value: "0.0."
- name: UKHOAssemblyProduct
  value: "ADDS Shared Infrastructure"
- name: SdkVersion
  value: "8.0.x"

stages:
- stage: BuildTestPublish
  displayName: Build, test and publish
  dependsOn: []
  jobs:
  - job: MainBuild
    workspace:
      clean: all
    displayName: Build, unit test and package
    steps:
    - task: PowerShell@2
      displayName: Output environment variables
      inputs:
        targetType: inline
        script: |
          gci env:
          $CurrentYear = Get-Date -Format "yyyy"
          $AssemblyCopyright = "Copyright © UK Hydrographic Office $CurrentYear"
          echo "##vso[task.setvariable variable=UKHOAssemblyCopyright]${AssemblyCopyright}"

    - task: PowerShell@2
      displayName: Set assembly version numbers based on build ID
      name: SetAssemblyVersion
      inputs:
        targetType: filePath
        filePath: '$(Build.SourcesDirectory)\Apply-AssemblyVersionAndDefaults.ps1'
        arguments: >
          -buildNumber "$(Build.BuildNumber)"
          -solutionDirectory "$(Build.SourcesDirectory)\"
          -UKHOAssemblyCompany "$env:UKHOAssemblyCompany"
          -UKHOAssemblyCopyright "$env:UKHOAssemblyCopyright"
          -UKHOAssemblyVersionPrefix "$env:UKHOAssemblyVersionPrefix"
          -UKHOAssemblyProduct "$env:UKHOAssemblyProduct"
          -SourceRevisionId "$(Build.SourceVersion)"
          
    - task: UseDotNet@2
      displayName: Use .NET $(SdkVersion) sdk
      inputs:
        packageType: sdk
        version: $(SdkVersion)

    - task: DotNetCoreCLI@2
      displayName: Package restore
      inputs:
        command: restore
        projects: |
          **/*.csproj
        feedsToUse: config
        noCache: true
        nugetConfigPath: '$(Build.SourcesDirectory)\BuildNuget.config'
        workingDirectory: '$(Build.SourcesDirectory)'
        packagesDirectory: '$(Build.SourcesDirectory)\packages'

    - task: DotNetCoreCLI@2
      displayName: Unit tests
      inputs:
        command: test
        projects: |
          **/*.Tests.csproj
        testRunTitle: UnitTests
        workingDirectory: '$(Build.SourcesDirectory)'
    
    - task: DotNetCoreCLI@2
      displayName: Pack libraries
      inputs:
        command: pack
        packagesToPack: '**/UKHO.ADDS.Infrastructure.Pipelines.csproj;**/UKHO.ADDS.Infrastructure.Results.csproj;**/UKHO.ADDS.Infrastructure.Serialization.csproj'
        packDirectory: $(Build.ArtifactStagingDirectory)/packages
        arguments:  '--configuration $(BuildConfiguration)'
          
    - task: PublishPipelineArtifact@1
      displayName: Publish NuGet packages
      inputs:
        path: $(Build.ArtifactStagingDirectory)/packages
        artifact: NuGetPackages

- stage: ProGet
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  variables:
  - group: nuget-deployment-vars
  jobs:
  - deployment: Publish_To_ProGetCloud
    displayName: Publish To ProGetCloud
    pool:
      name: NautilusRelease
    environment: UKHO-ADDS-Infrastructure-ProGet
    strategy:
      runOnce:
        deploy:
          steps:
          - powershell: Remove-Item "$(Pipeline.Workspace)/NuGetPackages/*.nupkg"
            displayName: Clean NuGetPackages folder

          - task: UseDotNet@2
            displayName: 'Use .NET $(SdkVersion) sdk'
            inputs:
              packageType: sdk
              version: $(SdkVersion)

          - download: current
            artifact: NuGetPackages

          - powershell: Get-ChildItem "$(Pipeline.Workspace)/NuGetPackages/*.nupkg" -File | Foreach {dotnet nuget push $_.fullname -k $(progetApiKey) -s https://progetcloud.ukho.gov.uk/nuget/ukho.trusted/v3/index.json }
            env:
              progetApiKey : $(progetApiKey)
            displayName: Publish Package
